// <auto-generated />
using System;
using CinemaInformationSystemRepository.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CinemaInformationSystemRepository.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20220627191128_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CinemaInformationSystemRepository.Entities.Auditorium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceCount")
                        .HasColumnType("int");

                    b.Property<int>("RowSeatCount")
                        .HasColumnType("int");

                    b.Property<int>("RowsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Auditoriums");
                });

            modelBuilder.Entity("CinemaInformationSystemRepository.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Age")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("AuditoriumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuditoriumId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CinemaInformationSystemRepository.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuditoriumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShowDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShowTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuditoriumId");

                    b.HasIndex("ClientId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("CinemaInformationSystemRepository.Entities.Auditorium", b =>
                {
                    b.HasOne("CinemaInformationSystemRepository.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CinemaInformationSystemRepository.Entities.Client", b =>
                {
                    b.HasOne("CinemaInformationSystemRepository.Entities.Auditorium", null)
                        .WithMany("Clients")
                        .HasForeignKey("AuditoriumId");
                });

            modelBuilder.Entity("CinemaInformationSystemRepository.Entities.Movie", b =>
                {
                    b.HasOne("CinemaInformationSystemRepository.Entities.Auditorium", null)
                        .WithMany("ShowedMovies")
                        .HasForeignKey("AuditoriumId");

                    b.HasOne("CinemaInformationSystemRepository.Entities.Client", null)
                        .WithMany("WachedMovies")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("CinemaInformationSystemRepository.Entities.Auditorium", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("ShowedMovies");
                });

            modelBuilder.Entity("CinemaInformationSystemRepository.Entities.Client", b =>
                {
                    b.Navigation("WachedMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
